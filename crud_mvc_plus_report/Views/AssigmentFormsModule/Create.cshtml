@model Domain.Class.AssigmentFormsModule

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Ajax.BeginForm("Create","AssigmentFormsModule",
    new AjaxOptions { HttpMethod="POST", OnSuccess="onAjaxRequestSuccess"},
    new { @id= "AjaxFormId",@class="form-horizontal", role="form"}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ModuleForms</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

        <div class="form-group">
            @Html.Label("Module", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ModuleId, ViewBag.Modules as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ModuleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Form", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.FormId, ViewBag.Forms as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FormId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script>
    function onAjaxRequestSuccess() {
        console.log("onAjaxRequestSuccess");
    }
</script>